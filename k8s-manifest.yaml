# 1. 永続ボリュームクレーム
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ckan-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: solr-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# 2. ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-env
data:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres
  POSTGRES_HOST: db
  CKAN_DB_USER: ckandbuser
  CKAN_DB_PASSWORD: ckandbpassword
  CKAN_DB: ckandb
  DATASTORE_READONLY_USER: datastore_ro
  DATASTORE_READONLY_PASSWORD: datastore
  DATASTORE_DB: datastore
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ckan-env
data:
  CKAN_SITE_URL: "https://localhost:31234"
  CKAN_PORT_HOST: "5000"
  NGINX_PORT_HOST: "81"
  NGINX_SSLPORT_HOST: "8443"
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres
  POSTGRES_HOST: db
  CKAN_DB_USER: ckandbuser
  CKAN_DB_PASSWORD: ckandbpassword
  CKAN_DB: ckandb
  DATASTORE_READONLY_USER: datastore_ro
  DATASTORE_READONLY_PASSWORD: datastore
  DATASTORE_DB: datastore
  CKAN_SQLALCHEMY_URL: postgresql://ckandbuser:ckandbpassword@db/ckandb
  CKAN_DATASTORE_WRITE_URL: postgresql://ckandbuser:ckandbpassword@db/datastore
  CKAN_DATASTORE_READ_URL: postgresql://datastore_ro:datastore@db/datastore
  TEST_CKAN_SQLALCHEMY_URL: postgres://ckan:ckan@db/ckan_test
  TEST_CKAN_DATASTORE_WRITE_URL: postgresql://ckan:ckan@db/datastore_test
  TEST_CKAN_DATASTORE_READ_URL: postgresql://datastore_ro:datastore@db/datastore_test
  USE_HTTPS_FOR_DEV: "false"
  CKAN_VERSION: "2.10.0"
  CKAN_SITE_ID: default
  CKAN___BEAKER__SESSION__SECRET: CHANGE_ME
  CKAN___API_TOKEN__JWT__ENCODE__SECRET: string:CHANGE_ME
  CKAN___API_TOKEN__JWT__DECODE__SECRET: string:CHANGE_ME
  CKAN_SYSADMIN_NAME: ckan_admin
  CKAN_SYSADMIN_PASSWORD: test1234
  CKAN_SYSADMIN_EMAIL: your_email@example.com
  CKAN_STORAGE_PATH: /var/lib/ckan
  CKAN_SMTP_SERVER: smtp.corporateict.domain:25
  CKAN_SMTP_STARTTLS: "True"
  CKAN_SMTP_USER: user
  CKAN_SMTP_PASSWORD: pass
  CKAN_SMTP_MAIL_FROM: ckan@localhost
  CKAN_MAX_UPLOAD_SIZE_MB: "100"
  TZ: UTC
  SOLR_IMAGE_VERSION: "2.10-solr9"
  CKAN_SOLR_URL: http://solr:8983/solr/ckan
  TEST_CKAN_SOLR_URL: http://solr:8983/solr/ckan
  REDIS_VERSION: "6"
  CKAN_REDIS_URL: redis://redis:6379/1
  TEST_CKAN_REDIS_URL: redis://redis:6379/1
  DATAPUSHER_VERSION: "0.0.20"
  CKAN_DATAPUSHER_URL: http://datapusher:8800
  CKAN__DATAPUSHER__CALLBACK_URL_BASE: http://ckan:5000
  NGINX_PORT: "80"
  NGINX_SSLPORT: "443"
  CKAN__PLUGINS: "image_view text_view datatables_view datastore datapusher envvars"
  CKAN__HARVEST__MQ__TYPE: redis
  CKAN__HARVEST__MQ__HOSTNAME: redis
  CKAN__HARVEST__MQ__PORT: "6379"
  CKAN__HARVEST__MQ__REDIS_DB: "1"

# 3. DB（PostgreSQL）
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: ckan-docker-db:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: db-env
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: pg-data

# 4. Solr
---
apiVersion: v1
kind: Service
metadata:
  name: solr
spec:
  ports:
    - port: 8983
      targetPort: 8983
  selector:
    app: solr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: solr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: solr
  template:
    metadata:
      labels:
        app: solr
    spec:
      containers:
        - name: solr
          image: ckan/ckan-solr:2.10-solr9
          ports:
            - containerPort: 8983
          volumeMounts:
            - name: solr-data
              mountPath: /var/solr
      volumes:
        - name: solr-data
          persistentVolumeClaim:
            claimName: solr-data

# 5. Datapusher
---
apiVersion: v1
kind: Service
metadata:
  name: datapusher
spec:
  ports:
    - port: 8800
      targetPort: 8800
  selector:
    app: datapusher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datapusher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datapusher
  template:
    metadata:
      labels:
        app: datapusher
    spec:
      containers:
        - name: datapusher
          image: ckan/ckan-base-datapusher:0.0.20
          ports:
            - containerPort: 8800

# 6. CKAN
---
apiVersion: v1
kind: Service
metadata:
  name: ckan
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: ckan
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ckan
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ckan
  template:
    metadata:
      labels:
        app: ckan
    spec:
      containers:
        - name: ckan
          image: ckan-docker-ckan:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: ckan-env
          volumeMounts:
            - name: ckan-storage
              mountPath: /var/lib/ckan
      volumes:
        - name: ckan-storage
          persistentVolumeClaim:
            claimName: ckan-storage

# 7. nginx（NodePortで外部公開、ckanにリバースプロキシ）
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
    - port: 443
      targetPort: 443
      nodePort: 31234
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: ckan-docker-nginx:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 443
